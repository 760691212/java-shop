server:
  port: 10088
spring:
  application:
    name: auth-shop
  redis:
    host: 169.254.110.128
    port: 6479
    password: 123456
    timeout: 5000
    jedis:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
eureka:
  instance:
    # 服务续约的两个重要属性
    leaseRenewalIntervalInSeconds: 30 # 服务续约间隔时间。默认每隔30秒，客户端会向服务端发送心跳。
    leaseExpirationDurationInSeconds: 90 # 服务失效时间。缺省为90秒服务端接收不到客户端的心跳，则剔除该客户端服务实例。
  client:
    service-url:
      defaultZone: http://127.0.0.1:10080/eureka/ #应用的主机名称
    # 是否启用eureka客户端。默认true
    enabled: true # 本地调试时，若不想启动eureka，可配置false即可，而不需要注释掉@EnableDiscoveryClient这么麻烦。
    # 缓存清单更新时间，默认30秒。见EurekaClientConfigBean，其中DefaultEurekaClientConfig可不看（前者spring实现，后者Netflix实现）
    registry-fetch-interval-seconds: 30 # 如果想eureka server剔除服务后尽快在client体现，我觉得可缩短此时间。
    healthcheck:
      enabled: true
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000
feign:
  hystrix:
    enabled: true
  compression:
    request:
      enabled: true # 开启请求压缩
      mime-types: text/html,application/xml,application/json # 设置压缩的数据类型
      min-request-size: 2048 # 设置触发压缩的大小下限
    response:
      enabled: true # 开启响应压缩
shop:
  jwt:
    secret: shop@Login(Auth}*^21)&SHOP_JAVA% # 登录校验的密钥
    pubKeyPath: D:\e-commerceProject\web procedure\shop\management-shop\src\assets\tmp\rsa\rsa.pub # 公钥地址
    priKeyPath: D:\e-commerceProject\web procedure\shop\management-shop\src\assets\tmp\rsa\rsa.pri # 私钥地址
    expire: 30 # 过期时间,单位分钟
    cookieName: SHOP_AUTH
    cookieMaxAge: 30

